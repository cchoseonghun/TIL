https://school.programmers.co.kr/learn/courses/30/lessons/92334

let id_list = [
    "muzi", "frodo", "apeach", "neo"
    // "con", "ryan"
]
let report = [
    "muzi frodo", "apeach frodo", "frodo neo", "muzi neo", "apeach muzi"
    // "ryan con", "ryan con", "ryan con", "ryan con"
]
let k = 2
// let k = 3;

function solution(id_list, report, k){
    var answer = [];
    let report_obj = {};
    let answer_obj = {};
    let report_set = new Set(report);
    report = [...report_set];

    id_list.map((a, i)=>{
        report_obj[a] = 0;
        answer_obj[a] = 0;
    })

    report.map((a)=>{
        let [reporter, reported] = a.split(' ');
        report_obj[reported] += 1;
    })
    // console.log('report_obj: ');
    // console.log(report_obj);

    for(let key in report_obj){
        let val = report_obj[key];
        if(val >= k){
            report.map((a)=>{
                let [reporter, reported] = a.split(' ');
                if(reported == key){
                    answer_obj[reporter] += 1;
                }
            })
        }
    }
    // console.log('answer_obj: ');
    // console.log(answer_obj);

    for(let key in answer_obj){
        let val = answer_obj[key];
        answer.push(val);
    }

    return answer;
}

console.log(solution(id_list, report, k));

처음 문제를 받고 위의 코드대로 풀었는데 100점중 75점으로 나머지 시간초과인 결과가 나왔다. 

여러 질문&해답 글에서 도움을 받은 결과

1. 변수를 선언할때는 주석을 달아 설명을 덧붙이자
2. for(), forEach(), map()
     map() 은 react 에서 html 을 쓰기위해 return() 을 쓰는게 아니었단 사실을 깨달음
     map() 은 forEach() 와 달리 배열을 순회하면서 배열의 각 원소들을 출력, 실행 결과를 모은 새 배열에 리턴한다.
     정리하면 
     - 단순 반복이라면 for()
     - 배열을 순회하려면 forEach()
     - 배열을 순회 후 새 배열을 얻고 싶다면 map() (return 포함)

위 피드백을 반영하여 다시 작성한 결과

let id_list = [
    "muzi", "frodo", "apeach", "neo"
    // "con", "ryan"
]
let report = [
    "muzi frodo", 
    "apeach frodo", 
    "frodo neo", 
    "muzi neo", 
    "apeach muzi"
    // "ryan con", "ryan con", "ryan con", "ryan con"
]
let k = 2
// let k = 3;

function solution(id_list, report, k){
    // var answer = [];
    let reported_obj = {};      // { 피신고자 : 신고당한횟수 }
    let reportedBy_obj = {};    // { 피신고자 : {신고자들} }
    let answer_obj = {};        // { 신고자 : 연락받을횟수 }
    let report_set = new Set(report);

    id_list.forEach((a)=>{
        reported_obj[a] = 0;
        reportedBy_obj[a] = [];
        answer_obj[a] = 0;
    })

    report_set.forEach((a)=>{
        let [id, reported] = a.split(' ');
        reported_obj[reported] += 1;
        reportedBy_obj[reported].push(id);
    })

    // console.log('reported_obj: ');
    // console.log(reported_obj);
    // console.log('reportedBy_obj: ');
    // console.log(reportedBy_obj);

    for(let reported in reported_obj){
        if(reported_obj[reported] >= k){
            reportedBy_obj[reported].forEach((id)=>{
                answer_obj[id] += 1;
            })
        }
    }

    // console.log(answer_obj);

    // return answer;
    return id_list.map((id)=>{
        return answer_obj[id]
    })
}

console.log(solution(id_list, report, k));



