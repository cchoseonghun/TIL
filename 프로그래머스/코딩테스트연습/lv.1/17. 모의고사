이 문제도 크게 두 부분으로 나눴음

1. 각 수포자들의 정답을 맞춘 개수 구하기
2. 제일 많이 맞춘 수포자 찾기

각 수포자들이 찍는 패턴을 각각 first, second, third 변수로 선언했고
예시로 준 
let answers 
// = [1,3,2,4,2];
// = [1,2,3,4,5];
두가지뿐만 아니라 
= [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1];
이런 긴 answers가 입력될 경우도 처음부터 고려하면서 풀이를 시작함.


let x=0 ~ answers.length 까지 for문으로 돌면서
해당 수포자의 패턴이 끝날 때 다시 0번째 요소로 돌아가는점을 생각하여
if문을 if(answers[x] == 수포자[x%수포자.length]){  
이렇게 걸릴 때 마다 각각의 새로운 수포자_num 변수에 +1

결과물로 나온 수포자_num들을 모아 각각 Object{name: 수포자, score: 맞춘 개수}로 만든 후, report라는 Array에 담음
score 기준으로 내림차순 정렬한 후 reduce로 돌며
이전 요소의 score가 현재 score보다 높을 경우 해당 i(인덱스) 부터 뒤로 쭉 제거해버림

**해당 상황에서 처리 완료 후 reduce에서 escape하는 방법으로
reduce 콜백함수 파라미터인 arr을 이용하여
arr.splice(1)을 사용했는데 
원하는 결과는 얻었지만 나중에 다시 검증해봐야겠음

필요한 요소만 남은 report를 다시 forEach()문으로 돌며 name만 빼서 answer 결과물에 넣은 후 리턴


let answers 
// = [1,3,2,4,2];
// = [1,2,3,4,5];
= [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1];

function solution(answers){
    var answer = [];
    let first = [1, 2, 3, 4, 5];
    let second = [2, 1, 2, 3, 2, 4, 2, 5];
    let third = [3, 3, 1, 1, 2, 2, 4, 4, 5, 5];

    let first_num = 0;
    let second_num = 0;
    let third_num = 0;

    // 1. 각 수포자들의 정답을 맞춘 개수 구하기
    for(let x=0;x<answers.length;x++){
        if(answers[x] == first[x%first.length]){
            first_num += 1;
        }
        if(answers[x] == second[x%second.length]){
            second_num += 1;
        }
        if(answers[x] == third[x%third.length]){
            third_num += 1;
        }
    }

    // 2. 제일 많이 맞춘 수포자 찾기 
    let report = [
        {name: 1, score: first_num}, 
        {name: 2, score: second_num}, 
        {name: 3, score: third_num}, 
    ];
    report = report.sort((a, b)=>{
        return b.score - a.score
    })
    
    report.reduce((acc, cur, i, arr)=>{
        if(acc != 0){
            if(acc.score > cur.score){
                // console.log(i, acc.score, cur.score);
                report = report.slice(0, i);
                arr.splice(1);
            }
        }
        return cur;
    }, 0)
    // console.log(report);

    report.forEach((a)=>{
        answer.push(a.name);
    })
    // console.log(answer)
    
    return answer;
}

// console.log(solution(answers))
solution(answers);
