정규표현석
정규식
regular expression
regex
regexp

// new_id에서 알파벳 소문자, 숫자, 빼기(-), 밑줄(_), 마침표(.)를 제외한 모든 문자를 제거합니다.
.repalce(/[^\w-.]/g, '')

\w: [A-Za-z0-9_]와 같은 의미. 영문자, 숫자, 밑줄 포함

[문자셋]: [] 안에 들어가는 문자열을 문자셋이라고 하고 
.이나 *과 같은 정규식의 특수문자가 특수문자 취급받지 않고 문자 그대로 취급받음

[^문자셋]: 문자셋 안의 시작부분에 ^가 있으면 부정문자셋을 의미
뒤에 나오는 문자셋을 제외한 문자가 대응된다.

/정규식/g: 정규식 뒤에 붙는 문자는 '플래그'라고 한다. 검색 옵션을 다양하게 지정가능
ex) i를 붙여 대소문자 구분 없이 검색 가능
ex) g는 정규식 조건에 맞는 모든 문자를 찾음


// new_id에서 마침표(.)가 2번 이상 연속된 부분을 하나의 마침표(.)로 치환합니다.
.replace(/\.+/g, '.')

\.: [] 안이 아닌 곳에서 . 그대로 쓰면 다른 의미를 갖게 되므로 이스케이프 문자와 같이 \. 로 쓴다.

+: + 앞의 문자가 1회 이상 반복되는 형태

// new_id에서 마침표(.)가 처음이나 끝에 위치한다면 제거합니다.
.replace(/^\.|\.$/, '')

^: [] 안이 아닌 / / 안에서 시작을 의미. ^ 뒤에 붙는 조건으로 시작하는지를 검사

|: 조건을 합칠 때 사용. or 라고 생각하셈

$: 끝을 의미. $ 앞에 붙는 조건으로 끝나는지 검사

// new_id가 빈 문자열이라면, new_id에 "a"를 대입합니다.
.replace(/^$/, 'a')  // 시작문자도 끝문자도 없으니 빈 문자열을 의미


